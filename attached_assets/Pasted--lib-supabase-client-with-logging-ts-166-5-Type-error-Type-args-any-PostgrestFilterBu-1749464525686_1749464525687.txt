./lib/supabase/client-with-logging.ts:166:5
Type error: Type '(...args: any[]) => PostgrestFilterBuilder<any, any, GenericStringError[], string, unknown>' is not assignable to type '<Query extends string = "*", ResultOne = ParseQuery<Query> extends infer ParsedQuery ? ParsedQuery extends Node[] ? ProcessNodesWithoutSchema<ParsedQuery, {}> : ParsedQuery : any>(columns?: Query | undefined, { head, count, }?: { ...; } | undefined) => PostgrestFilterBuilder<...>'.
  Call signature return types 'PostgrestFilterBuilder<any, any, GenericStringError[], string, unknown>' and 'PostgrestFilterBuilder<any, any, ResultOne[], string, unknown>' are incompatible.
    The types returned by 'throwOnError()' are incompatible between these types.
      Type 'PostgrestFilterBuilder<any, any, GenericStringError[], string, unknown> & PostgrestBuilder<GenericStringError[], true>' is not assignable to type 'PostgrestFilterBuilder<any, any, ResultOne[], string, unknown> & PostgrestBuilder<ResultOne[], true>'.
        Type 'PostgrestFilterBuilder<any, any, GenericStringError[], string, unknown> & PostgrestBuilder<GenericStringError[], true>' is not assignable to type 'PostgrestFilterBuilder<any, any, ResultOne[], string, unknown>'.
          Types of property 'then' are incompatible.
            Type '(<TResult1 = PostgrestSingleResponse<GenericStringError[]>, TResult2 = never>(onfulfilled?: ((value: PostgrestSingleResponse<GenericStringError[]>) => TResult1 | PromiseLike<...>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<...>) | ... 1 more ... | undefined) => PromiseLike<...>) & (<TR...' is not assignable to type '<TResult1 = PostgrestSingleResponse<ResultOne[]>, TResult2 = never>(onfulfilled?: ((value: PostgrestSingleResponse<ResultOne[]>) => TResult1 | PromiseLike<...>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<...>) | ... 1 more ... | undefined) => PromiseLike<...>'.
              Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.
                Types of parameters 'value' and 'value' are incompatible.
                  Type 'PostgrestSingleResponse<GenericStringError[]>' is not assignable to type 'PostgrestSingleResponse<ResultOne[]>'.
                    Type 'PostgrestResponseSuccess<GenericStringError[]>' is not assignable to type 'PostgrestSingleResponse<ResultOne[]>'.
                      Type 'PostgrestResponseSuccess<GenericStringError[]>' is not assignable to type 'PostgrestResponseSuccess<ResultOne[]>'.
                        Type 'GenericStringError[]' is not assignable to type 'ResultOne[]'.
                          Type 'GenericStringError' is not assignable to type 'ResultOne'.
                            'ResultOne' could be instantiated with an arbitrary type which could be unrelated to 'GenericStringError'.

  164 |     const originalDelete = query.delete.bind(query);
  165 |
> 166 |     query.select = (...args: any[]) => {
      |     ^
  167 |       const startTime = Date.now();
  168 |       const result = originalSelect(...args);